###########
#  zplug  #
###########

export ZPLUG_HOME=$HOME/.zplug

# install zplug 
local zplug_init=$ZPLUG_HOME/init.zsh
if [ ! -f "$zplug_init" ] &> /dev/null; then
    git clone https://github.com/zplug/zplug $ZPLUG_HOME 
fi

source $zplug_init

# manage zplug with zplug
# zplug 'zplug/zplug', hook-build:'zplug --self-manage' 

# import all oh-my-zsh libraries 
zplug "lib/*", from:oh-my-zsh 

# git 
zplug "plugins/git", from:oh-my-zsh

# git with fzf 
# alias won't work if don't defer 
zplug "wfxr/forgit", defer:2

# extract compressed files 
zplug "plugins/extract", from:oh-my-zsh

# autojump 
# TODO:  <28-01-20, YL> #
# add key bindings 
zplug "plugins/autojump", from:oh-my-zsh

# Set the priority when loading
# zsh-syntax-highlighting must be loaded
# after executing compinit command and sourcing other plugins
# (If the defer tag is given 2 or above, run after compinit command)
zplug "zsh-users/zsh-syntax-highlighting", defer:2

# fzf, installation is not handled here 
# assume it is aready installed 
# zplug "junegunn/fzf", use:"shell/*.zsh"

# theme 
zplug "agkozak/agkozak-zsh-prompt"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# source plugins and add commands to $PATH 
zplug load

########################
#  agkozak-zsh-prompt  #
########################

if zplug check agkozak/agkozak-zsh-prompt; then 
    AGKOZAK_PROMPT_DIRTRIM=3
    AGKOZAK_PROMPT_CHAR=( '>' '>' '<')
    AGKOZAK_LEFT_PROMPT_ONLY=1
    AGKOZAK_USER_HOST_DISPLAY=0
fi 

#########
#  fzf  #
#########

local FZF_ROOT=$HOME/.fzf

# check if fzf binary is compiled
if [ -f "$FZF_ROOT/bin/fzf" ]; then

    # echo "Fzf installed"
    if [[ ! "$PATH" == *$FZF_ROOT/bin* ]]; then
        export PATH="${PATH:+${PATH}:}$FZF_ROOT/bin"
    fi

    # auto-completion if current shell is interactive 
    [[ $- == *i* ]] && source "$FZF_ROOT/shell/completion.zsh" 2> /dev/null

    # key bindings
    source "$FZF_ROOT/shell/key-bindings.zsh"

    # use the silver searcher 
    if [ -x "$(command -v ag)" ]; then
        FZF_DEFAULT_COMMAND='ag'
    fi

    # color 
    export FZF_DEFAULT_OPTS='
		--color fg:252,bg:016,hl:166,fg+:255,bg+:233,hl+:202
		--color info:144,prompt:161,spinner:161,pointer:161,marker:118
    '

    # ctrl-T
    # Using highlight (http://www.andre-simon.de/doku/highlight/en/highlight.html)
    export FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"
    
    # auto select shen only one option, auto exit when no option
    export FZF_CTRL_T_OPTS="--select-1 --exit-0"

    # ctrl-R, remove duplicate command history 
    # FIXME:  <08-02-20, YL> #
    export FZF_CTRL_R_OPTS='--sort --exact'
fi 

###########
#  broot  #
###########

# TODO:  <31-01-20, YL> #
# how to check if broot is installed 
local broot_conf=$HOME/.config/broot/launcher/bash/br
[ -r "$broot_conf" ] && [ -f "$broot_conf" ] && source "$broot_conf";
unset broot_conf

#############
#  general  #
#############

# source .alias .env .function .bindkey if exists
# source at the end of zshrc to overwrite / prioritize
for file_name in alias env function bindkey;
do
    local file=$HOME/.$file_name
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done 
unset file_name 

# xprofile 
local file=$HOME/.xprofile
[ -r "$file" ] && [ -f "$file" ] && source "$file";

###########
#  conda  #
###########

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/yingcheng-liu/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/yingcheng-liu/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/yingcheng-liu/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/yingcheng-liu/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

